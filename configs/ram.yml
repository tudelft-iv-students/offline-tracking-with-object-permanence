# Dataset and dataloader parameters
dataset: 'nuScenes'
version: 'v1.0-trainval'
agent_setting: 'single_agent'
input_representation: 'raster'


train_set_args: &ds_args
  split: 'train'
  t_h: 2
  t_f: 6
  map_extent: [-61, 61, -22, 100]
  img_size: [488,488]
  random_flips: True

val_set_args:
  <<: *ds_args
  split: 'train_val'
  random_flips: False

test_set_args:
  <<: *ds_args
  split: 'val'
  random_flips: False

batch_size: 4
num_workers: 4
nrow: 2





encoder_type: 'raster_encoder'
encoder_args:
  backbone: 'resnet18'
  input_channels: 6
  use_positional_encoding: True
  target_agent_feat_size: 3
  target_agent_enc_size: 32
  


# Aggregator parameters
aggregator_type: 'ram'
aggregator_args:
  pre_train: False
  agg_type: 'global'
  backbone: 'resnet18'
  target_agent_enc_size: 32
  map_extent: [-61, 61, -22, 100]
  context_enc_size: 512
  img_size: [488,488]
  resolution: 1
  emb_size: 128
  num_heads: 2
  convolute: True
  conv_kernel_ratio: 0.15
  out_channels: 48

# aggregator_type: 'home_agg'
# aggregator_args:
#   pre_train: False
#   backbone: 'resnet18'
#   target_agent_enc_size: 32
#   map_extent: [-61, 61, -22, 100]
#   context_enc_size: 512
#   img_size: [488,488]
#   resolution: 1
#   emb_size: 128
#   num_heads: 1
#   convolute: True
#   conv_kernel_ratio: 0.15
#   out_channels: 32


# Decoder parameters
decoder_type: 'ram_decoder'
decoder_args:
  agg_type: 'global'
  conc_range: 18
  map_extent: [-61, 61, -22, 100]
  resolution: 1
  agg_channel: 48 ##should be same with 'out_channels' in 'aggregator_args', if the aggregator is 2DSampler
  decoder_depth: 3
  heatmap_channel: 12
  output_traj: True
  num_target: 20
  sample_radius: 1
  target_agent_enc_size: 32
  emb_size: 128
  diff_emb: 10
  pretrain_mlp: False
  apply_softmax: False

# decoder_type: 'home'
# decoder_args:
#   agg_type: 'home_agg'
#   conc_range: 18
#   map_extent: [-61, 61, -22, 100]
#   resolution: 1
#   agg_channel: 32 ##should be same with 'out_channels' in 'aggregator_args', if the aggregator is 2DSampler
#   decoder_depth: 2
#   heatmap_channel: 12



# Optimizer parameters
optim_args:
  lr: 0.001
  scheduler_step: 3
  scheduler_gamma: 0.8

# Full parameters
losses: ['focal_loss','min_ade_loss']
loss_weights: [1.0,0.2]
loss_args:
  - gauss_blur: True
    map_extent: [-61, 61, -22, 100]
    resolution: 1
    window_size: 5
    horizon: 12
    type: 'sum'
    reduce_map: True
    normalize: False
  - dummy: 0
  - type: 'sum'



tr_metrics: ['focal_loss','min_ade_k','min_ade_loss', 'miss_rate_k','min_fde_k']
tr_metric_args:
  - gauss_blur: True
    map_extent: [-61, 61, -22, 100]
    resolution: 1
    window_size: 5
    horizon: 12
    type: 'sum'
    reduce_map: True
    normalize: False
  - k: 10
  - dummy: 0
  - k: 10
    dist_thresh: 2
  - k: 10


val_metrics: ['focal_loss','min_ade_k', 'miss_rate_k','min_ade_k', 'miss_rate_k' , 'min_fde_k']
val_metric_args:
  - gauss_blur: True
    map_extent: [-61, 61, -22, 100]
    resolution: 1
    window_size: 5
    horizon: 12
    type: 'sum'
    reduce_map: True
    normalize: False
  - k: 10
  - k: 10
    dist_thresh: 2
  - k: 5
  - k: 5
    dist_thresh: 2
  - k: 10


# Pretraining MLP decoders
# losses: [min_ade_loss','min_fde_k']
# loss_weights: [1.0,0.2]
# loss_args:
#   - k: 10
#   - k: 10



# tr_metrics: ['min_fde_k','min_ade_k', 'miss_rate_k']
# tr_metric_args:
#   - k: 10
#   - k: 10
#   - k: 10
#     dist_thresh: 2


# val_metrics: ['min_ade_k', 'miss_rate_k','min_ade_k', 'miss_rate_k']
# val_metric_args:
#   - k: 10
#   - k: 10
#     dist_thresh: 2
#   - k: 5
#   - k: 5
#     dist_thresh: 2


log_freq: 100